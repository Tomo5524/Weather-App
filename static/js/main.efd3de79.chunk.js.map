{"version":3,"sources":["components/countries.js","components/time.js","components/nextDaysForecast.js","components/weather.js","components/header.js","App.js","index.js"],"names":["isoCountries","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BV","BR","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HK","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MO","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","AN","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SK","SI","SB","SO","ZA","GS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VG","VI","WF","EH","YE","ZM","ZW","getCountryName","countryCode","hasOwnProperty","checkTime","i","GetTime","timezone","meridian","d","Date","localTime","getTime","localOffset","getTimezoneOffset","time","h","getHours","m","getMinutes","toString","length","slice","NextFiveDays","props","useState","icon","setIcon","date","value","dt","day","getDate","month","getMonth","max_temp","temp","max","max_temp_rounded","Math","round","min_temp","min","min_temp_rounded","iconName","a","fetch","mode","iconApi","url","getIcon","weather","className","id","unit","style","width","height","src","alt","humidity","Weather","console","log","country","toUpperCase","cur_time","nextFiveDays","forecast","map","item","idx","key","cityName","description","feels_like","temp_max","temp_min","Header","setToggleSwitch","city","setCity","setCountry","setNextFiveDays","userInput","setUserInput","setWeather","ShowDiv","div","current","classList","remove","hideDiv","add","useEffect","APIKey","process","response","json","data","lat","coord","lng","lon","sys","name","weather_res","res","daily","timezone_offset","no_location","locationFound","error","setTimeout","getWeather","useRef","FormControl","type","placeholder","onChange","e","target","Button","variant","onClick","ref","boxShadow","offColor","onColor","uncheckedIcon","checkedIcon","contains","checked","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.efd3de79.chunk.js","sourcesContent":["const isoCountries = {\r\n  AF: \"Afghanistan\",\r\n  AX: \"Aland Islands\",\r\n  AL: \"Albania\",\r\n  DZ: \"Algeria\",\r\n  AS: \"American Samoa\",\r\n  AD: \"Andorra\",\r\n  AO: \"Angola\",\r\n  AI: \"Anguilla\",\r\n  AQ: \"Antarctica\",\r\n  AG: \"Antigua And Barbuda\",\r\n  AR: \"Argentina\",\r\n  AM: \"Armenia\",\r\n  AW: \"Aruba\",\r\n  AU: \"Australia\",\r\n  AT: \"Austria\",\r\n  AZ: \"Azerbaijan\",\r\n  BS: \"Bahamas\",\r\n  BH: \"Bahrain\",\r\n  BD: \"Bangladesh\",\r\n  BB: \"Barbados\",\r\n  BY: \"Belarus\",\r\n  BE: \"Belgium\",\r\n  BZ: \"Belize\",\r\n  BJ: \"Benin\",\r\n  BM: \"Bermuda\",\r\n  BT: \"Bhutan\",\r\n  BO: \"Bolivia\",\r\n  BA: \"Bosnia And Herzegovina\",\r\n  BW: \"Botswana\",\r\n  BV: \"Bouvet Island\",\r\n  BR: \"Brazil\",\r\n  IO: \"British Indian Ocean Territory\",\r\n  BN: \"Brunei Darussalam\",\r\n  BG: \"Bulgaria\",\r\n  BF: \"Burkina Faso\",\r\n  BI: \"Burundi\",\r\n  KH: \"Cambodia\",\r\n  CM: \"Cameroon\",\r\n  CA: \"Canada\",\r\n  CV: \"Cape Verde\",\r\n  KY: \"Cayman Islands\",\r\n  CF: \"Central African Republic\",\r\n  TD: \"Chad\",\r\n  CL: \"Chile\",\r\n  CN: \"China\",\r\n  CX: \"Christmas Island\",\r\n  CC: \"Cocos (Keeling) Islands\",\r\n  CO: \"Colombia\",\r\n  KM: \"Comoros\",\r\n  CG: \"Congo\",\r\n  CD: \"Congo, Democratic Republic\",\r\n  CK: \"Cook Islands\",\r\n  CR: \"Costa Rica\",\r\n  CI: \"Cote D'Ivoire\",\r\n  HR: \"Croatia\",\r\n  CU: \"Cuba\",\r\n  CY: \"Cyprus\",\r\n  CZ: \"Czech Republic\",\r\n  DK: \"Denmark\",\r\n  DJ: \"Djibouti\",\r\n  DM: \"Dominica\",\r\n  DO: \"Dominican Republic\",\r\n  EC: \"Ecuador\",\r\n  EG: \"Egypt\",\r\n  SV: \"El Salvador\",\r\n  GQ: \"Equatorial Guinea\",\r\n  ER: \"Eritrea\",\r\n  EE: \"Estonia\",\r\n  ET: \"Ethiopia\",\r\n  FK: \"Falkland Islands (Malvinas)\",\r\n  FO: \"Faroe Islands\",\r\n  FJ: \"Fiji\",\r\n  FI: \"Finland\",\r\n  FR: \"France\",\r\n  GF: \"French Guiana\",\r\n  PF: \"French Polynesia\",\r\n  TF: \"French Southern Territories\",\r\n  GA: \"Gabon\",\r\n  GM: \"Gambia\",\r\n  GE: \"Georgia\",\r\n  DE: \"Germany\",\r\n  GH: \"Ghana\",\r\n  GI: \"Gibraltar\",\r\n  GR: \"Greece\",\r\n  GL: \"Greenland\",\r\n  GD: \"Grenada\",\r\n  GP: \"Guadeloupe\",\r\n  GU: \"Guam\",\r\n  GT: \"Guatemala\",\r\n  GG: \"Guernsey\",\r\n  GN: \"Guinea\",\r\n  GW: \"Guinea-Bissau\",\r\n  GY: \"Guyana\",\r\n  HT: \"Haiti\",\r\n  HM: \"Heard Island & Mcdonald Islands\",\r\n  VA: \"Holy See (Vatican City State)\",\r\n  HN: \"Honduras\",\r\n  HK: \"Hong Kong\",\r\n  HU: \"Hungary\",\r\n  IS: \"Iceland\",\r\n  IN: \"India\",\r\n  ID: \"Indonesia\",\r\n  IR: \"Iran, Islamic Republic Of\",\r\n  IQ: \"Iraq\",\r\n  IE: \"Ireland\",\r\n  IM: \"Isle Of Man\",\r\n  IL: \"Israel\",\r\n  IT: \"Italy\",\r\n  JM: \"Jamaica\",\r\n  JP: \"Japan\",\r\n  JE: \"Jersey\",\r\n  JO: \"Jordan\",\r\n  KZ: \"Kazakhstan\",\r\n  KE: \"Kenya\",\r\n  KI: \"Kiribati\",\r\n  KR: \"Korea\",\r\n  KW: \"Kuwait\",\r\n  KG: \"Kyrgyzstan\",\r\n  LA: \"Lao People's Democratic Republic\",\r\n  LV: \"Latvia\",\r\n  LB: \"Lebanon\",\r\n  LS: \"Lesotho\",\r\n  LR: \"Liberia\",\r\n  LY: \"Libyan Arab Jamahiriya\",\r\n  LI: \"Liechtenstein\",\r\n  LT: \"Lithuania\",\r\n  LU: \"Luxembourg\",\r\n  MO: \"Macao\",\r\n  MK: \"Macedonia\",\r\n  MG: \"Madagascar\",\r\n  MW: \"Malawi\",\r\n  MY: \"Malaysia\",\r\n  MV: \"Maldives\",\r\n  ML: \"Mali\",\r\n  MT: \"Malta\",\r\n  MH: \"Marshall Islands\",\r\n  MQ: \"Martinique\",\r\n  MR: \"Mauritania\",\r\n  MU: \"Mauritius\",\r\n  YT: \"Mayotte\",\r\n  MX: \"Mexico\",\r\n  FM: \"Micronesia, Federated States Of\",\r\n  MD: \"Moldova\",\r\n  MC: \"Monaco\",\r\n  MN: \"Mongolia\",\r\n  ME: \"Montenegro\",\r\n  MS: \"Montserrat\",\r\n  MA: \"Morocco\",\r\n  MZ: \"Mozambique\",\r\n  MM: \"Myanmar\",\r\n  NA: \"Namibia\",\r\n  NR: \"Nauru\",\r\n  NP: \"Nepal\",\r\n  NL: \"Netherlands\",\r\n  AN: \"Netherlands Antilles\",\r\n  NC: \"New Caledonia\",\r\n  NZ: \"New Zealand\",\r\n  NI: \"Nicaragua\",\r\n  NE: \"Niger\",\r\n  NG: \"Nigeria\",\r\n  NU: \"Niue\",\r\n  NF: \"Norfolk Island\",\r\n  MP: \"Northern Mariana Islands\",\r\n  NO: \"Norway\",\r\n  OM: \"Oman\",\r\n  PK: \"Pakistan\",\r\n  PW: \"Palau\",\r\n  PS: \"Palestinian Territory, Occupied\",\r\n  PA: \"Panama\",\r\n  PG: \"Papua New Guinea\",\r\n  PY: \"Paraguay\",\r\n  PE: \"Peru\",\r\n  PH: \"Philippines\",\r\n  PN: \"Pitcairn\",\r\n  PL: \"Poland\",\r\n  PT: \"Portugal\",\r\n  PR: \"Puerto Rico\",\r\n  QA: \"Qatar\",\r\n  RE: \"Reunion\",\r\n  RO: \"Romania\",\r\n  RU: \"Russian Federation\",\r\n  RW: \"Rwanda\",\r\n  BL: \"Saint Barthelemy\",\r\n  SH: \"Saint Helena\",\r\n  KN: \"Saint Kitts And Nevis\",\r\n  LC: \"Saint Lucia\",\r\n  MF: \"Saint Martin\",\r\n  PM: \"Saint Pierre And Miquelon\",\r\n  VC: \"Saint Vincent And Grenadines\",\r\n  WS: \"Samoa\",\r\n  SM: \"San Marino\",\r\n  ST: \"Sao Tome And Principe\",\r\n  SA: \"Saudi Arabia\",\r\n  SN: \"Senegal\",\r\n  RS: \"Serbia\",\r\n  SC: \"Seychelles\",\r\n  SL: \"Sierra Leone\",\r\n  SG: \"Singapore\",\r\n  SK: \"Slovakia\",\r\n  SI: \"Slovenia\",\r\n  SB: \"Solomon Islands\",\r\n  SO: \"Somalia\",\r\n  ZA: \"South Africa\",\r\n  GS: \"South Georgia And Sandwich Isl.\",\r\n  ES: \"Spain\",\r\n  LK: \"Sri Lanka\",\r\n  SD: \"Sudan\",\r\n  SR: \"Suriname\",\r\n  SJ: \"Svalbard And Jan Mayen\",\r\n  SZ: \"Swaziland\",\r\n  SE: \"Sweden\",\r\n  CH: \"Switzerland\",\r\n  SY: \"Syrian Arab Republic\",\r\n  TW: \"Taiwan\",\r\n  TJ: \"Tajikistan\",\r\n  TZ: \"Tanzania\",\r\n  TH: \"Thailand\",\r\n  TL: \"Timor-Leste\",\r\n  TG: \"Togo\",\r\n  TK: \"Tokelau\",\r\n  TO: \"Tonga\",\r\n  TT: \"Trinidad And Tobago\",\r\n  TN: \"Tunisia\",\r\n  TR: \"Turkey\",\r\n  TM: \"Turkmenistan\",\r\n  TC: \"Turks And Caicos Islands\",\r\n  TV: \"Tuvalu\",\r\n  UG: \"Uganda\",\r\n  UA: \"Ukraine\",\r\n  AE: \"United Arab Emirates\",\r\n  GB: \"United Kingdom\",\r\n  US: \"United States\",\r\n  UM: \"United States Outlying Islands\",\r\n  UY: \"Uruguay\",\r\n  UZ: \"Uzbekistan\",\r\n  VU: \"Vanuatu\",\r\n  VE: \"Venezuela\",\r\n  VN: \"Viet Nam\",\r\n  VG: \"Virgin Islands, British\",\r\n  VI: \"Virgin Islands, U.S.\",\r\n  WF: \"Wallis And Futuna\",\r\n  EH: \"Western Sahara\",\r\n  YE: \"Yemen\",\r\n  ZM: \"Zambia\",\r\n  ZW: \"Zimbabwe\",\r\n};\r\n\r\nfunction getCountryName(countryCode) {\r\n  if (isoCountries.hasOwnProperty(countryCode)) {\r\n    return isoCountries[countryCode];\r\n  } else {\r\n    return countryCode;\r\n  }\r\n}\r\n\r\nexport default getCountryName;\r\n","function GetTime(timezone) {\r\n  let d = new Date();\r\n  let localTime = d.getTime(); // returns the number of milliseconds*\r\n  let localOffset = d.getTimezoneOffset() * 60000; // 60000 convert offset to minute\r\n  // console.log(localTime, \"localTime\");\r\n  // console.log(localOffset, \"localOffset\");\r\n  let utc = localTime + localOffset;\r\n  let cur_localtime = utc + 1000 * timezone; // Obtain destination city's offset in hours and convert to milliseconds\r\n  //1000 will result in the first millisecond of the next second, https://www.w3schools.com/jsref/jsref_utc.asp\r\n  let time = new Date(cur_localtime);\r\n  let h = checkTime(time.getHours());\r\n  let m = checkTime(time.getMinutes());\r\n  let meridian;\r\n  if (h > 12) {\r\n    meridian = \"PM\";\r\n    h -= 12;\r\n  } else if (h < 12) {\r\n    meridian = \"AM\";\r\n    if (h == 0) {\r\n      h = 12;\r\n    }\r\n  } else {\r\n    meridian = \"PM\";\r\n  }\r\n\r\n  // handle edge case where 05 AM should be 5 AM\r\n  h = h.toString();\r\n  h = h.length === 2 && h[0] === \"0\" ? h.slice(1) : h;\r\n\r\n  return h + \":\" + m + \" \" + meridian;\r\n}\r\n\r\nfunction checkTime(i) {\r\n  return i < 10 ? \"0\" + i : i;\r\n}\r\n\r\nexport default GetTime;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction NextFiveDays(props) {\r\n  const [icon, setIcon] = useState(\"\");\r\n  let date = new Date(props.value.dt * 1000);\r\n  // console.log(date, \"date\");\r\n  let day = date.getDate();\r\n  let month = date.getMonth() + 1;\r\n  let max_temp = props.value.temp.max;\r\n  let max_temp_rounded = Math.round(max_temp);\r\n  let min_temp = props.value.temp.min;\r\n  let min_temp_rounded = Math.round(min_temp);\r\n  getIcon(props.value.weather[0].icon);\r\n\r\n  async function getIcon(iconName) {\r\n    if (iconName) {\r\n      const iconApi = await fetch(\r\n        `https://openweathermap.org/img/w/${iconName}.png`,\r\n        {\r\n          mode: \"cors\",\r\n        }\r\n      );\r\n      setIcon(iconApi.url);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        \"m-2 text-center flex-grow-1 \" + (props.id !== 4 ? \"border-right\" : \"\")\r\n      }\r\n    >\r\n      <h4>\r\n        {month}/{day}\r\n      </h4>\r\n      <h3>\r\n        {max_temp_rounded}\r\n        {props.unit}\r\n      </h3>\r\n      <h5>\r\n        {min_temp_rounded}\r\n        {props.unit}\r\n      </h5>\r\n      <img\r\n        id=\"wicon\"\r\n        style={{ width: 70, height: 70 }}\r\n        src={icon}\r\n        alt=\"Weather icon\"\r\n      ></img>\r\n      <h5>Humidity: {props.value.humidity}%</h5>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NextFiveDays;\r\n","import React, { useState } from \"react\";\r\nimport getCountryName from \"./countries\";\r\nimport GetTime from \"./time\";\r\nimport NextFiveDays from \"./nextDaysForecast\";\r\n// import \"../reset.css\";\r\n\r\nfunction Weather(props) {\r\n  console.log(props, \"props in weather\");\r\n  const [icon, setIcon] = useState(\"\");\r\n  let country = getCountryName(props.country.toUpperCase());\r\n  const cur_time = GetTime(props.value.timezone);\r\n  let unit = country ? (props.unit === \"metric\" ? \"°C\" : \"°F\") : \"\";\r\n  getIcon(props.value.icon);\r\n  // console.log(props.value.icon);\r\n\r\n  async function getIcon(iconName) {\r\n    if (iconName) {\r\n      const iconApi = await fetch(\r\n        `https://openweathermap.org/img/w/${iconName}.png`,\r\n        {\r\n          mode: \"cors\",\r\n        }\r\n      );\r\n      setIcon(iconApi.url);\r\n    }\r\n  }\r\n\r\n  const nextFiveDays = props.forecast.map((item, idx) => (\r\n    <NextFiveDays key={idx} id={idx} value={item} unit={unit} />\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-around align-items-center text-light mt-3\">\r\n        <div>\r\n          <h2>\r\n            {props.value.cityName}\r\n            {country ? \", \" : \"\"}\r\n            {country}\r\n          </h2>\r\n          <p className=\"mb-3\">{country ? \"as of \" + cur_time : \"\"}</p>\r\n          <h1 className=\"mb-0\">\r\n            {props.value.temp}\r\n            {unit}\r\n          </h1>\r\n          <h3>{props.value.description}</h3>\r\n          <h4>\r\n            Feels like: {props.value.feels_like}\r\n            {unit}\r\n          </h4>\r\n        </div>\r\n        <div>\r\n          <img\r\n            id=\"wicon\"\r\n            style={{ width: 120, height: 120 }}\r\n            src={icon}\r\n            alt=\"Weather icon\"\r\n          ></img>\r\n          <div className=\"d-flex\">\r\n            <h4>\r\n              {props.value.temp_max}\r\n              {unit}\r\n            </h4>\r\n            <h4 className=\"px-3\">/</h4>\r\n            <h4>\r\n              {props.value.temp_min}\r\n              {unit}\r\n            </h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bg-light my-3 mt-4 p-4 radius opacity\">\r\n        <h2>Daily Forecast</h2>\r\n        <div className=\"d-flex\">{nextFiveDays}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Weather from \"./weather\";\r\n// import Navbar from \"react-bootstrap/Navbar\";\r\nimport Switch from \"react-switch\";\r\nimport { Button, FormControl, Form } from \"react-bootstrap\";\r\n\r\nexport default function Header() {\r\n  const [unit, setToggleSwitch] = useState(\"metric\");\r\n  // console.log(unit, \"unit/////////////////////////////\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [nextFiveDays, setNextFiveDays] = useState([]);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [weather, setWeather] = useState({\r\n    temp: \"\",\r\n    feels_like: \"\",\r\n    temp_min: \"\",\r\n    temp_max: \"\",\r\n    description: \"\",\r\n    humidity: \"\",\r\n    // country: \"\",\r\n    cityName: \"\",\r\n    dt: 0,\r\n    timezone: 0,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    // onChange, each time user enters, userInput gets updated\r\n    setUserInput(e.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    // fires when submit gets clicked\r\n    // set city to userInput\r\n    setCity(userInput);\r\n  };\r\n\r\n  const handleSwitchChange = () => {\r\n    // avoid showing no location message when there is no valid city to look up\r\n    // avoid switicing toggle there is no valid city\r\n    if (no_location.current.classList.contains(\"no-display\")) {\r\n      setToggleSwitch(unit === \"metric\" ? \"imperial\" : \"metric\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // get 2 API calls in the same function\r\n    // first get Latitude and Longitude, then call another API with lat and lon\r\n    async function getWeather() {\r\n      try {\r\n        const APIKey = process.env.REACT_APP_WEATHER_API_KEY;\r\n        let cityName = \"\";\r\n        // Fecth firsst API\r\n        let response = await fetch(\r\n          `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${APIKey}`,\r\n          {\r\n            mode: \"cors\",\r\n          }\r\n        );\r\n        // convert to json\r\n\r\n        let data = await response.json();\r\n        // Store the post data to a variable\r\n        let lat = data.coord.lat;\r\n        let lng = data.coord.lon;\r\n        setCountry(data.sys.country);\r\n        cityName = data.name;\r\n\r\n        // Fetch another API\r\n        let weather_res = await fetch(\r\n          `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&exclude=minutely,hourly,alerts&appid=${APIKey}&units=${unit}`,\r\n          {\r\n            mode: \"cors\",\r\n          }\r\n        );\r\n\r\n        let res = await weather_res.json();\r\n        let { temp, feels_like, humidity, weather } = res.current;\r\n        setWeather({\r\n          temp: Math.round(temp),\r\n          feels_like: Math.round(feels_like),\r\n          temp_min: Math.round(res.daily[0].temp.min),\r\n          temp_max: Math.round(res.daily[0].temp.max),\r\n          description: weather[0].description,\r\n          humidity: humidity,\r\n          cityName: cityName,\r\n          dt: res.dt,\r\n          timezone: res.timezone_offset,\r\n          icon: weather[0].icon,\r\n        });\r\n        // get arrays of next five days\r\n        setNextFiveDays(res.daily.slice(1, 6));\r\n        hideDiv(no_location);\r\n        ShowDiv(locationFound);\r\n      } catch (e) {\r\n        error.current.classList.add(\"display\");\r\n        setTimeout(() => {\r\n          error.current.classList.remove(\"display\");\r\n        }, 2000);\r\n        hideDiv(locationFound);\r\n        setTimeout(() => {\r\n          ShowDiv(no_location);\r\n        }, 2000);\r\n      }\r\n    }\r\n    if (city) {\r\n      getWeather();\r\n    }\r\n  }, [unit, city]);\r\n\r\n  /////// calling multiple API calls asynchronouslly (but looks like synchronously) with out async and await\r\n  // if (city) {\r\n  //   // const APIGeoKey = process.env.REACT_APP_Geo_API_KEY;\r\n  //   const APIKey = process.env.REACT_APP_WEATHER_API_KEY;\r\n  //   let cityName = \"\";\r\n  //   fetch(\r\n  //     `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${APIKey}`\r\n  //   )\r\n  //     .then(function (response) {\r\n  //       if (response.ok) {\r\n  //         return response.json();\r\n  //       } else {\r\n  //         return Promise.reject(response);\r\n  //       }\r\n  //     })\r\n  //     .then(function (data) {\r\n  //       console.log(data, \"data of lat and lng////\");\r\n  //       // Store the post data to a variable\r\n  //       let lat = data.coord.lat;\r\n  //       let lng = data.coord.lon;\r\n  //       setCountry(data.sys.country);\r\n  //       cityName = data.name;\r\n\r\n  //       // Fetch another API\r\n  //       // console.log(\r\n  //       //   `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&exclude=minutely,hourly,alerts&appid=${APIKey}&units=${unit}`\r\n  //       // );\r\n  //       return fetch(\r\n  //         `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&exclude=minutely,hourly,alerts&appid=${APIKey}&units=${unit}`\r\n  //       );\r\n  //     })\r\n  //     .then(function (response) {\r\n  //       if (response.ok) {\r\n  //         return response.json();\r\n  //       } else {\r\n  //         return Promise.reject(response);\r\n  //       }\r\n  //     })\r\n  //     .then(function (res) {\r\n  //       console.log(res, \"response of weather////\");\r\n  //       let { temp, feels_like, humidity, weather } = res.current;\r\n  //       console.log(temp, feels_like, humidity, weather);\r\n  //       console.log(Math.round(res.daily[0].temp.min), \"min temp\");\r\n  //       setWeather({\r\n  //         temp: Math.round(temp),\r\n  //         feels_like: Math.round(feels_like),\r\n  //         temp_min: Math.round(res.daily[0].temp.min),\r\n  //         temp_max: Math.round(res.daily[0].temp.max),\r\n  //         description: weather[0].description,\r\n  //         humidity: humidity,\r\n  //         cityName: cityName,\r\n  //         dt: res.dt,\r\n  //         timezone: res.timezone_offset,\r\n  //         icon: weather[0].icon,\r\n  //       });\r\n  //       setNextFiveDays(res.daily.slice(1, 6));\r\n  //       console.log(\"weather fetched ////////////\");\r\n\r\n  //       hideDiv(no_location);\r\n  //       ShowDiv(locationFound);\r\n  //     })\r\n  //     .catch(function (e) {\r\n  //       console.log(e, \"not valid\");\r\n\r\n  //       error.current.classList.add(\"display\");\r\n  //       setTimeout(() => {\r\n  //         error.current.classList.remove(\"display\");\r\n  //       }, 2000);\r\n  //       hideDiv(locationFound);\r\n  //       setTimeout(() => {\r\n  //         ShowDiv(no_location);\r\n  //       }, 2000);\r\n  //     });\r\n  // }\r\n\r\n  function ShowDiv(div) {\r\n    div.current.classList.remove(\"no-display\");\r\n  }\r\n\r\n  function hideDiv(div) {\r\n    console.log(div);\r\n    div.current.classList.add(\"no-display\");\r\n  }\r\n\r\n  let error = useRef(); // grab html element\r\n  let no_location = useRef();\r\n  let locationFound = useRef();\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"nav bg-custom radius justify-content-between p-4 align-items-center\">\r\n        <h2 className=\"pb-3\">Weather App</h2>\r\n        <div>\r\n          <div className=\"d-flex align-items-center\">\r\n            <FormControl\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-sm-2\"\r\n              onChange={handleChange}\r\n            />\r\n            <Button variant=\"outline-success\" onClick={handleClick}>\r\n              Search\r\n            </Button>\r\n          </div>\r\n          <div ref={error} className=\"error-container d-block pb-3\">\r\n            <p className=\"m-0\">Location Not Found</p>\r\n          </div>\r\n        </div>\r\n\r\n        <Switch\r\n          className=\"switch pb-3\"\r\n          boxShadow=\"3px 3px 5px #c8c8c8\"\r\n          offColor=\"#f2f2f2\"\r\n          onColor=\"#f2f2f2\"\r\n          uncheckedIcon={<span className=\"switch-icon\">°F</span>}\r\n          checkedIcon={<span className=\"switch-icon\">°C</span>}\r\n          onChange={handleSwitchChange}\r\n          // what is checked?\r\n          checked={unit === \"metric\"}\r\n        />\r\n      </nav>\r\n      {/* end of nav and moves to main div */}\r\n      <div ref={no_location} className=\"text-center pt-5\">\r\n        <h1>\r\n          No Location found...😭\r\n          {/* <p style={{ fontSize: 100, color: \"yellow\" }}> 128575</p> */}\r\n        </h1>\r\n      </div>\r\n      <div ref={locationFound} className=\"no-display\">\r\n        <Weather\r\n          value={weather}\r\n          unit={unit}\r\n          country={country}\r\n          forecast={nextFiveDays}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Header from \"./components/header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport \"./reset.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"; // needs this for bootstrap to work\r\n\r\nReactDOM.render(\r\n  // what does this mean\r\n  //   <React.StrictMode>\r\n  //     <Routes />\r\n  //   </React.StrictMode>,\r\n  <App />,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}